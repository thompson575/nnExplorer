% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nnFit.R
\name{nnFit}
\alias{nnFit}
\title{fit a neural network}
\usage{
nnFit(X, Y, design, XV = NULL, YV = NULL, control)
}
\arguments{
\item{X}{A matrix of features.}

\item{Y}{a matrix of outputs.}

\item{design}{encoded version of the network design as created by nnDesign}

\item{XV}{optional matrix of validation features}

\item{YV}{optional matrix of validation features}

\item{control}{named list of hyperparameters}
}
\value{
A list containing the results.

Control parameters
\itemize {
  \item algorithm   GD, GDV, SGD, SGDV. Default GD
  \item eta         the step length (learning rate). Default 0.1
  \item etaDrop     Epochs between 10% drop in eta. Default 0 (no drop)
  \item epochs      Maximum number of epochs (iterations for GD). Default 1000
  \item penalty     Regularisation penalty L1 or L2. Default no penalty
  \item lambda      Regularisation parameter for weight & bias. Default 0.01
  \item lambdabias  lambda to apply to the bias. Default 0.01
  \item lambdaweight lambda to apply to the weight. Default 0.01
  \item momentum    momentum parameter for SGD. Default 0 (no momentum)
  \item rmsprop     rmsprop parameter for SGD. Default 0 (no rmsprop)
  \item warmup      period before momentum and rmsprop start. Default 50 epochs
  \item batch       batch size for SGD. Default 10
  \item nIter       iterations within each epoch. Default 10
  \item beta        exponential smoothing parameter for the SGD parameters. Default 0.99
  \item epsDeriv    threshold for early stopping based on MAG (mean absolute gradient). Default 0 (no early stopping)
  \item maxvrise    maximum number of consecutive rises in the validation loss before early stopping. Default 0 (no early stopping)
  \item validGap    epochs between evaluation of the validation loss. Default 1 (every epoch)   
  \item trace       epochs between printing current status to screen. Default 0 (no status information)
  }
  With SGD the loss is evaluated once per epoch but the parameters are updated
  nIer times per epoch
}
\description{
fit a neural network
}
\examples{
R <- (X, Y, design, control=list(algorithm="GD", eta=0.1))

}
